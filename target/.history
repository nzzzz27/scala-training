run
reload
run
reload
run
reload
run
run 
run
run 
run
:w
run
run 
:w
run 
run
clear
run
console
run
Tuple2
console
TUple2
Tuple2
console
run
console
run
Tuple2
run
run 
run
run 
:q
run 
4C4Drun 
run 
run 10
run 
future1 flatMap { n =>
  future2(n) flatMap { m =>
    future3(m)
  }
}
run 
}
run 
run
run 
run
run 
run
run 
run
run 
run
run 
run
def future1(): Future[Int] = 
  Future{
    Thread.sleep(1000)
    2 * 2
  }
def future2(i: Int): Future[Int] =  
  Future {
    Thread.sleep(1000)
    i * 2
  }
def future3(i: Int): Future[Unit] =
  Future {
    Thread.sleep(1000)  
    println(i * 2)
  }
def future1(): Future[Int] = 
  Future{
    Thread.sleep(1000)
    2 * 2
Branch(
      id             = 1,
      organizationId = 1,
      name           = "nextbeat保育園"
run 
14
run 
run
run 
run
run 
run
run 
run
run 
run
run 
run
:quit
exit
